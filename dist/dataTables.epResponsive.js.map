{"version":3,"sources":["../src/dataTables.epResponsive.js"],"names":["window","document","$","undefined","resizeCallback","responsiveOptions","ignoreColumns","fn","dataTable","epResponsive","inst","api","Api","settings","columns","oInit","CELL_FONT_SIZE","Number","table","body","css","match","ERROR_PREFIX","sTableId","errorLogged","that","map","oFeatures","bAutoWidth","console","error","_parse_width","widthString","Math","round","_init_total_width","totalWidth","forEach","column","fixed","width","_set_column_visibility","idx","visible","length","_resize_cols","tableWidth","container","visibilityChanged","hiddenColumns","fixedColumnsOverflow","i","push","Array","isArray","hideWhenAllColumnsAreVisible","col","adjust","draw","on","setTimeout","off","_responsive","nTable","id","ext","feature","register","callback","options","index","bIgnore"],"mappings":"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","file":"dataTables.epResponsive.js","sourcesContent":["/**------------------------------\n * epResponsive DataTables Plugin\n * ------------------------------\n * Feature Letter: R\n *\n */\nimport $ from 'jquery';\nimport 'datatables';\n\t(function(window, document, $, undefined) {\n\n\t\tvar resizeCallback,\n\t\t\tresponsiveOptions = {},\n\t\t\tignoreColumns;\n\n\t\t$.fn.dataTable.epResponsive = function ( inst ) {\n\t\t\tvar api = new $.fn.dataTable.Api( inst );\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar columns = settings.oInit.columns;\n\t\t\tvar CELL_FONT_SIZE = Number($(api.table().body()).css(\"font-size\").match(/(\\d+)*/)[0]);\n\t\t\tvar ERROR_PREFIX = \"epResponsive (\" + settings.sTableId + \"): \";\n\t\t\tvar errorLogged = false;\n\t\t\tvar that = this;\n\n\t\t\tignoreColumns = columns.map(function() {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tif(settings.oFeatures.bAutoWidth) {\n\t\t\t\tconsole.error(ERROR_PREFIX + \"Auto Width should be disabled.\");\n\t\t\t}\n\n\t\t\t// use default font size of 14px\n\t\t\tif(CELL_FONT_SIZE === 0) {\n\t\t\t\tCELL_FONT_SIZE = 14;\n\t\t\t}\n\n\t\t\t// parses width string to number. width can be provided in em, % or px\n\t\t\tthis._parse_width = function (widthString) {\n\t\t\t\tvar match = widthString.match(/(^[0-9\\.]+)(.*$)/);\n\t\t\t\tif(match[2] === \"em\") {\n\t\t\t\t\treturn Number(match[1]) * CELL_FONT_SIZE;\n\t\t\t\t} else if(match[2] === \"%\") {\n\t\t\t\t\treturn Math.round(Number(match[1]) / 100 * CELL_FONT_SIZE);\n\t\t\t\t} else if(match[2] === \"px\") {\n\t\t\t\t\treturn Number(match[1]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// calculates the initial value for total width.\n\t\t\t// this is equal to the summation of the widths of fixed columns\n\t\t\tthis._init_total_width = function () {\n\t\t\t\tvar totalWidth = 0;\n\t\t\t\tcolumns.forEach( function (column) {\n\t\t\t\t\tif(column.fixed) {\n\t\t\t\t\t\ttotalWidth += that._parse_width(column.width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalWidth;\n\t\t\t};\n\n\t\t\t// sets the visibility of the column in datatables and in the metadata to the given value\n\t\t\tthis._set_column_visibility = function(idx, visible) {\n\t\t\t\tif(idx < columns.length) {\n\t\t\t\t\tapi.column(idx).visible(visible, false); // disable redraw for performance\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// hides columns that cannot fit within the table container's width\n\t\t\tthis._resize_cols = function () {\n\t\t\t\tvar totalWidth = that._init_total_width();\n\t\t\t\tvar tableWidth = $(api.table().container()).width();\n\t\t\t\tvar visibilityChanged = false;\n\t\t\t\tvar hiddenColumns = [];\n\t\t\t\tvar fixedColumnsOverflow = totalWidth - tableWidth;\n\n\t\t\t\tfor(var i = 0; i < columns.length; i++) {\n\t\t\t\t\tif(!ignoreColumns[i]) {\n\t\t\t\t\t\tif(!columns[i].fixed) {\n\t\t\t\t\t\t\tif(columns[i].width) {\n\t\t\t\t\t\t\t\ttotalWidth += that._parse_width(columns[i].width);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttotalWidth += CELL_FONT_SIZE;\n\t\t\t\t\t\t\t\tif(!errorLogged) {\n\t\t\t\t\t\t\t\t\tconsole.error(ERROR_PREFIX + \"Column #\" + i + \" should have width property. Using default of 1em.\");\n\t\t\t\t\t\t\t\t\terrorLogged = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(totalWidth < tableWidth || columns[i].fixed) {\n\t\t\t\t\t\t\tif(api.column(i).visible() !== true) {\n\t\t\t\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthat._set_column_visibility(i, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(api.column(i).visible() !== false) {\n\t\t\t\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthat._set_column_visibility(i, false);\n\t\t\t\t\t\t\thiddenColumns.push(columns[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide fixed columns if needed\n\t\t\t\tfor(i = columns.length - 1; i >= 0 && fixedColumnsOverflow > 0; i--) {\n\t\t\t\t\tif(!ignoreColumns[i] && columns[i].fixed) {\n\t\t\t\t\t\tif(api.column(i).visible() !== false) {\n\t\t\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthat._set_column_visibility(i, false);\n\t\t\t\t\t\thiddenColumns.push(columns[i]);\n\t\t\t\t\t\tfixedColumnsOverflow -= that._parse_width(columns[i].width);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide columns that should be hidden when all columns are being shown\n\t\t\t\tif(hiddenColumns.length === 0) {\n\t\t\t\t\tif(Array.isArray(responsiveOptions.hideWhenAllColumnsAreVisible)) {\n\t\t\t\t\t\tresponsiveOptions.hideWhenAllColumnsAreVisible.forEach(function (col) {\n\t\t\t\t\t\t\tthat._set_column_visibility(col, false);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// perform redraw now\n\t\t\t\tapi.columns.adjust().draw( false );\n\n\t\t\t\t// only call resize callbacks if visibility actually changed\n\t\t\t\tif(visibilityChanged) {\n                    if (resizeCallback && typeof resizeCallback === 'function') {\n                        resizeCallback(hiddenColumns);\n                    }\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// resize columns on window resize\n\t\t\t$(window).on(\"resize.epR\", function () {\n\t\t\t\tthat._resize_cols();\n\t\t\t});\n\n\t\t\t// resize columns on table init\n\t\t\tapi.on(\"init.dt\", function () {\n\n\t\t\t\t//push this to the end of the stack\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthat._resize_cols();\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\t// clean up on table destroy\n\t\t\tapi.on(\"destroy.dt\", function () {\n\t\t\t\t$(window).off(\"resize.epR\");\n\t\t\t\tresizeCallback = null;\n\t\t\t});\n\n\t\t\tif (settings._responsive ) {\n\t\t\t\tthrow \"Responsive already initialised on table \" + settings.nTable.id;\n\t\t\t}\n\n\t\t\tsettings._responsive = this;\n\t\t};\n\n\t\t// Subscribe the feature plug-in to DataTables, ready for use\n\t\t$.fn.dataTable.ext.feature.push( {\n\t\t\t\"fnInit\": function( settings ) {\n\t\t\t\tnew $.fn.dataTable.epResponsive( settings );\n\t\t\t},\n\t\t\t\"cFeature\": \"R\",\n\t\t\t\"sFeature\": \"epResponsive\"\n\t\t});\n\n\t\t// Create responsive object on API\n\t\t$.fn.dataTable.Api.register( 'epResponsive()', function () {} );\n\n\t\t// Resize callback registration method.\n\t\t$.fn.dataTable.Api.register( 'epResponsive.onResize()', function ( callback ) {\n\t\t\tresizeCallback = callback;\n\t\t});\n\n\t\t// Set options.\n\t\t$.fn.dataTable.Api.register( 'epResponsive.setOptions()', function ( options ) {\n\t\t\tresponsiveOptions = options;\n\t\t});\n\n\t\t// Set whether epResponsive should ignore the given column when doing calculations.\n\t\t// Use this when you want to manage a column's visibility manually.\n\t\t$.fn.dataTable.Api.register( 'epResponsive.setIgnoreColumn()', function ( index, bIgnore ) {\n\t\t\tif(ignoreColumns && index < ignoreColumns.length) {\n\t\t\t\tignoreColumns[index] = bIgnore;\n\t\t\t}\n\t\t});\n\t})(window, document, $);\n"]}